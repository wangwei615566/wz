<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czwx.cashloan.core.mapper.ProfitAmountMapper" >
  <resultMap id="BaseResultMap" type="com.czwx.cashloan.core.model.ProfitAmount" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="total" property="total" jdbcType="DECIMAL" />
    <result column="can_cashed" property="canCashed" jdbcType="DECIMAL" />
    <result column="cashed" property="cashed" jdbcType="DECIMAL" />
    <result column="frozen" property="frozen" jdbcType="DECIMAL" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, total, can_cashed, cashed, frozen, state, update_time, create_time
  </sql>
  <sql id="searchBy">
    <trim prefix="where" prefixOverrides="and|or">
      <if test="id != null" >
        id = #{id,jdbcType=BIGINT}
      </if>
      <if test="userId != null" >
        and user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="total != null" >
        and total = #{total,jdbcType=DECIMAL}
      </if>
      <if test="cashed != null" >
        and cashed = #{cashed,jdbcType=DECIMAL}
      </if>
      <if test="frozen != null" >
        and frozen = #{frozen,jdbcType=DECIMAL}
      </if>
      <if test="state != null" >
        and state = #{state,jdbcType=TINYINT}
      </if>
      <if test="updateTime != null" >
        and update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="createTime != null" >
        and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
    </trim>
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from profit_amount
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="findToUser" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from profit_amount
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="selectList" resultMap="BaseResultMap" parameterType="java.util.HashMap">
    select
    <include refid="Base_Column_List" />
    from profit_amount
    <include refid="searchBy"/>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from profit_amount
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.czwx.cashloan.core.model.ProfitAmount" >
    insert into profit_amount (id, user_id, total, 
      can_cashed, cashed, frozen, 
      state, update_time, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{total,jdbcType=DECIMAL}, 
      #{canCashed,jdbcType=DECIMAL}, #{cashed,jdbcType=DECIMAL}, #{frozen,jdbcType=DECIMAL}, 
      #{state,jdbcType=TINYINT}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.czwx.cashloan.core.model.ProfitAmount" >
    insert into profit_amount
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="canCashed != null" >
        can_cashed,
      </if>
      <if test="cashed != null" >
        cashed,
      </if>
      <if test="frozen != null" >
        frozen,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="total != null" >
        #{total,jdbcType=DECIMAL},
      </if>
      <if test="canCashed != null" >
        #{canCashed,jdbcType=DECIMAL},
      </if>
      <if test="cashed != null" >
        #{cashed,jdbcType=DECIMAL},
      </if>
      <if test="frozen != null" >
        #{frozen,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.czwx.cashloan.core.model.ProfitAmount" >
    update profit_amount
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=DECIMAL},
      </if>
      <if test="canCashed != null" >
        can_cashed = #{canCashed,jdbcType=DECIMAL},
      </if>
      <if test="cashed != null" >
        cashed = #{cashed,jdbcType=DECIMAL},
      </if>
      <if test="frozen != null" >
        frozen = #{frozen,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.czwx.cashloan.core.model.ProfitAmount" >
    update profit_amount
    set user_id = #{userId,jdbcType=BIGINT},
      total = #{total,jdbcType=DECIMAL},
      can_cashed = #{canCashed,jdbcType=DECIMAL},
      cashed = #{cashed,jdbcType=DECIMAL},
      frozen = #{frozen,jdbcType=DECIMAL},
      state = #{state,jdbcType=TINYINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>